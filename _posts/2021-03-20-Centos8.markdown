---
layout: post
title: MySQL 백업하기 -1
image: mysql.png
date: 2021-03-20 21:05:00 +0500
tags:
categories: mydeal
---

# 데이터베이스 백업설정
Ncloud 에서 Ocloud로 데이터베이스 이관이 성공적으로 끝났다.  
이번 포스팅에서는 실시간 자동 백업을 설정하기 전에,   
백업의 종류에 대해 간략하게 알아가고 백업을 진행을 하도록 하겠다.  

***

# Full-Backup  
![]({{site.baseurl}}/images/fullbackup.png)  
전체 데이터를 백업하는 방식이다.  
보통 일단위, 주단위로 백업한다.  
일단위로 받는것이 보통이다. 일주일 단위로 받으면 백업받는데 너무 오래걸리고,  
서비스도 느려지기때문에 가능하면 일단위로 받는것이 좋다.  
mysqldump를 사용해서 백업하면 된다.

***

# Incremental-Backup  
![]({{site.baseurl}}/images/incremental.png)  
증분량 백업이라고도 한다. Full-Backup을 하고 다음 Full-Backup전에 쌓인 데이터(create, insert등)를  
**증분량** 이라고 하며 이 **증분량에 대한 백업**을 **Incremetal-Backup**이라고 한다.  
mysqlbinlog를 사용해서 백업하면 된다.  

***

# full-backup 실습  
`cd /var/lib/mysql ` 명령어로 mysql 폴더로 이동한다.  

![]({{site.baseurl}}/images/db/fullbackup.jpg)  
***~비밀번호를 틀려서 명령어를 한번 더 실행했다.~***  
`mysqldump -u root -p -R -v testdb > backup_testdb.sql`  
해당 명령어를 사용해 backup_testdb.sql 파일을 만든다. -R옵션은 데이터뿐만 아니라  
프로시저와 함수를 함께 백업하는 옵션으로 앞으로 자주 사용될 것이다. (routines)  
-v 옵션은 해당 명령어 실행 시 모든 메시지를 출력한다. (verbose)  
`>` 는 export 반대로 `<`는 import이다.

## 백업파일이 잘 생성되었다.
![]({{site.baseurl}}/images/db/testdb-fullbackup.PNG)   

***  

# 실제사례 실습  
다음과 같은 상황이 발생하였다고 가정하여 실습을 진행하겠다.      
```
1. Test 테이블 생성 및 5개 데이터 추가(Insert)  
2. Test 테이블에서 3개 데이터 삭제   
3. 전체 데이터 백업 (Full Backup)  
4. Test 테이블에 데이터 변경작업  
5. 실수로 Test 테이블의 모든 데이터 삭제  
```  












